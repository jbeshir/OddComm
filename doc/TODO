MILESTONE 1: All IRC client commands functional.
MILESTONE 2: All IRC client functionality known bugs removed.
MILESTONE 3: Stable linking without known bugs.

NOT FINISHED YET:

- (Conditional) channel deletion on emptying is missing. Should probably be a permission check on PART.

- (O)KICK: Needs to prevent rejoin for three seconds.

COMMANDS:

- INVITE
- LIST
- KILL
- VERSION
- WHOIS
- USERHOST
- ISON
- CHECK
- STATS
- TIME
- ADMIN
- INFO
- RESTART
- DIE

Not implementing WHOWAS. It's better provided by a service with some real memory, and the ability to identify people by better things than nick. Such as NS INFO.

Not implementing link-related commands until a stable linking module exists, in which case they will need to be in a module.


FEATURES:

- Notices on account login/opering up.

- Channel creation getting permission checks, hooks. Required for oponcreate, restricting channel creation to server ops, logging uses.

- Automatic pinging of idle clients.

- Build system: Only build files containing a _ if a module/subsystem corresponding to the start of the name is being built. Improve module/subsystem files to be able to include comments (use configuration system?).

- Hook run list, with hooks for actions caused by another action always happening after the first action's hooks- but, with ability to wait until all first-level hooks have been executed before continuing, so the caller can assume the next action it attempts is after the effects of its first have taken effect.

- Configuration system. Default settings for EVERYTHING.

- Logging scheme being implemented, and messages being added in appropriate places.

- Filter subsystem, calls into it from PRIVMSG and NOTICE, permitting colours to be stripped, auditorium mode, implementation of FILTER and SILENCE... unavoidably slow, though.

- On-connect messages.

- MOTD

- CAP
-- SASL (needs linking).

- Fakelag.

- Proper examination of buffer size, ability to grow/set buffer size up to some defined limit. Look at how other IRCDs do it.

- Cloaking.

- A linking module.

- Webclient module.
-- Whiteboard module.

- TLS.

MODULES:

- client/waitpong, make clients wait until they've responded to ping to connect.

- client/check, view user/channel data as an oper.

- user/blockunreg, do not permit unchecked users to complete registration until they are logged in to some kind of account.

- user/silence, extend ban infrastructure to clients, permitting users to filter out other users.

- chan/oponcreate, making a user who creates a channel be opped in it.

- chan/hierarchy, implementing metadata which restricts deopping, and can be added or removed by anyone with the op privilege and a higher hierarchy metadata value. Plus client code to add the metadata as a user-specified list of prefix modes. Implements hierarchy markers which can mark any levels the channel admins wish to.

- oper/filter, filter on messages.


BUGS/CLEANUP:

- Solve "multiple extban changes in one line" problem.
-- Send all changes to parser at once.
-- Add "merging" hook. Slower? More complicated or simpler?

- Messages to the user on going away/unaway should be sent in response to the metadata being set, not the command being successful. Minor.

- Invites are currently hardcoded for the default channel type only. Not too hard to fix, mostly an internal representation thing, whether it needs changing is a good question.

OPTIMISATIONS:

- Switch core to using Mutexes. Less fighting over the same stuff.

- Profile it before doing anything else.

- Mode parser is kinda nasty and creates a map. Look for improvements here.
-- Extban parsing is nasty, too.

- Switch to using a trie in more places?
