// Main MMN proto file.
package mmn;

// Basic line message.
// One and only one of the fields must be set.
// Receiving a message without a (known) field being set is an error.
message Line {

	// Session negotiation message types.
	optional VersionList version_list = 1;
	optional string version = 2;
	optional Cap cap = 3;
	optional bool degraded = 4;

	// Synchronisation and burst messages.
	optional uint64 nonce = 101;
	optional bool desynchronized = 102;
	optional bool synchronized = 103;
	optional bool burst = 104;
	optional EntitySync entity_sync = 105;
	optional GlobalSync global_sync = 106;

	// Connection maintenance messages.
	optional bool ping = 201;  // Value ignored.
	optional bool pong = 202;  // Value ignored.

	// State change negotiation messages.
	optional ChangeRequest change_request = 301;
	optional uint64 change_request_ack = 302;
	optional PaxosPrepare paxos_prepare = 303;
	optional PaxosPromise paxos_promise = 304;
	optional PaxosNack paxos_nack = 305;
	optional PaxosAccept paxos_accept = 306;
	optional PaxosAccepted paxos_accepted = 307;
	optional Change change = 308;

	// Change propagation messages.
	optional uint64 change_notification = 401;
	optional uint64 change_content_request = 402;
	optional uint64 change_missing = 403;
}

// Session negotiation message types.
message VersionList {
	repeated string versions = 1;
}

message Cap {
	repeated string capabilities = 1;
}


// Synchronisation and burst messages.
message EntitySync {
	required uint64 entity = 1;
	required string key = 2;
	required bytes value = 3;
}

message GlobalSync {
	required string key = 1;
	required bytes value = 2;
}


// State change negotiation messages.
message ChangeRequest {
	required uint64 id = 1;
	repeated uint64 ignores = 2;
	repeated ChangeEntry changes = 3;
}

message PaxosPrepare {
	required uint64 proposal = 1;
	required uint64 next_change = 2;
}

message PaxosPromise {
	required uint64 proposal = 1;
	repeated ForwardedChange changes = 2;

	message ForwardedChange {
		required uint64 proposal = 1;
		required ChangeRequest change = 2;
	}
}

message PaxosNack {
	required uint64 prepare = 1;
	required uint64 leader = 2;
}

message PaxosAccept {
	required uint64 id = 1;
	required uint64 request = 2;
	required uint64 proposal = 3;
	repeated ChangeEntry changes = 4;
}

message PaxosAccepted {
	required uint64 id = 1;
	required uint64 request = 2;
	required uint64 proposal = 3;
	repeated ChangeEntry changes = 4;
}

message Change {
	required uint64 id = 1;
	required uint64 request = 2;
	required uint64 proposal = 3;
	repeated ChangeEntry changes = 4;
}
message ChangeEntry {
	required string key = 1;
	required bytes value = 2;
	optional uint64 source = 3;
	optional uint64 target = 4;
}


// Change propagation messages.
message ChangeNotification {
	required uint64 change = 1;
}

message ChangeContentRequest {
	required uint64 change = 1;
}

message ChangeMissing {
	required uint64 change = 1;
}
